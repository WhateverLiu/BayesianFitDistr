% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/counterComo.R
\name{counterComo}
\alias{counterComo}
\title{Counter-comonotonization}
\usage{
counterComo(X, Y, N = 64L, rgMethod = "lr")
}
\arguments{
\item{X}{A 2-column data frame \code{(support, probability)} as the PMF.
Elements in \code{support} must be sorted and have no duplicates.
\code{probability} should be nonnegative.}

\item{Y}{Same as \code{X}.}

\item{N}{Support size of the result PMF. Default 64. If \code{<= 1}, 
the function comonotonizes \code{X} and \code{Y} and returns the 
result without regriding. Comonotonization does not need the two PMFs to 
have common step sizes. The regriding can prevent the result PMF from being
too long.}

\item{rgMethod}{Regriding method:

  \code{"lr"}: linear regrid. Default.

  \code{"r4"}: four-point regrid.

  \code{""}: do not regrid. Has the same effect as \code{N <= 1}.}
}
\description{
Compute the sum of two distributions assuming minimum correlation.
}
\details{
Countermonotonicity is undefined in three or more dimensional space. 
The function is equivalent to reversing the row order of \code{Y} and calling 
\code{\link{como}(X, Y)}.
}
\examples{
X = data.frame(val = sort(runif(100)), P = runif(100))
X$P = X$P / sum(X$P)
Y = data.frame(val = sort(runif(200)), P = runif(200))
Y$P = Y$P / sum(Y$P)
XplusY = keyALGs::counterComo(X, Y, rgMethod = "") # Do not regrid.


corrImposed = (keyALGs::Var(XplusY) - (keyALGs::Var(X) + keyALGs::Var(Y))) / 
  (2 * sqrt(keyALGs::Var(X) * keyALGs::Var(Y)))


cat("Result PMF has only nonnegative probabilities = ",
    min(XplusY$P) >= 0, "\n",
    "Sum of result PMF's probabilities = ",
    sum(XplusY$P), "\n",
    "Theoretical mean of the result PMF = ",
    keyALGs::Mean(X) + keyALGs::Mean(Y), "\n",
    "Actual mean of the result PMF = ",
    keyALGs::Mean(XplusY), "\n",
    "Minimum correlation that can be imposed between X and Y = ",
    corrImposed, "\n", sep = "")


XplusYregrid = keyALGs::counterComo(X, Y, N = 50, rgMethod = "r4")
plot(XplusYregrid, type = "h")
}
