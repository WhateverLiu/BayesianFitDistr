% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{LBFGSBtrbFitList}
\alias{LBFGSBtrbFitList}
\title{Fit TrBs}
\usage{
LBFGSBtrbFitList(
  abc,
  lm1,
  empDistrList,
  abcLB = as.numeric(c(1.01, 0.1, 0.1)),
  abcUB = as.numeric(c(30, 30, 30)),
  scaleEps = 1e-08,
  scaleMaxit = 100L,
  distanceFun = "likelihood",
  max_iterations = 100L,
  maxCore = 15L,
  RIBlib = "Numerical Recipes",
  sequentialUpdate = -1L,
  hgrad = 0,
  centralDiff = TRUE,
  m = 6L,
  epsilon = 1e-05,
  epsilon_rel = 1e-05,
  past = 1L,
  delta = 1e-10,
  max_submin = 10L,
  max_linesearch = 20L,
  min_step = 1e-20,
  max_step = 1e+20,
  ftol = 1e-04,
  wolfe = 0.9
)
}
\arguments{
\item{abc}{Initializations of \code{a,b,c} as a \eqn{3\times K} numeric 
matrix. Here \eqn{K} is the number of initializations. The function will 
fit each distribution using the \eqn{K} initializations, and then return  
the optimized parameters that lead to the best 
objective function value.}

\item{lm1}{A numeric vector of target limited means for constraining 
the TrBs.}

\item{empDistrList}{A list of empirical PMFs. Each PMF is a list of two 
numeric vectors, the support and the probabilities.}

\item{abcLB}{A numeric vector as the lower bounds on \code{a,b,c}.
An emptry vector \code{numeric(0)} implies no lower bounds. 
Supplying the lower bounds is strongly recommended. 
Default to \code{c(1.01,0.1,0.1)}. Note that \code{a<=1} implies 
a TrB distribution with infinite mean.}

\item{abcUB}{A numeric vector as the upper bounds on \code{a,b,c}. 
An emptry vector \code{numeric(0)} imples no upper bounds. 
Supplying the upper bounds is strongly recommended. 
Default to \code{c(30,30,30)}.}

\item{scaleEps}{Stop Newton's solver for parameter \code{d} if 
the difference between TrB's current limited mean and
its target limited mean becomes less than \code{scaleEps}.
Default to \code{1e-8}.}

\item{scaleMaxit}{Stop Newton's solver for parameter \code{d} if 
the number of iterations has reached \code{scaleMaxit}. 
Default to \code{100}.}

\item{distanceFun}{A string. Name of the distance function for optimization.
\itemize{

\item{\code{"likelihood"}:}{ Negative log-likelihood.}

\item{\code{"likelihoodDiscrete"}:}{ Discretize the TrB and then compute 
the negative log-likelihood, aka cross-entropy. Much slower due to 
frequent calls to TrB's CDF. No improvement over 
\code{"likelihood"} was found.}
  
\item{\code{"Komogorov"}:}{\href{https://en.wikipedia.org/wiki/Smooth_maximum}{ Smooth maximum} 
distance between CDFs. Slow. The smooth maximum ensures differentiability. }

\item{\code{"EuclideanCDF"}:}{ Euclidean distance between CDFs. Slow.}

\item{\code{"unbiasedLikelihoodDiscrete"}:}{ A research effort misled by the 
  "unbiased" discretization method described in R package \code{actuar}. 
  Such discretization preserves the PDF's mean, but the probabilities 
  will not sum up to 1. Use with caution.}
  
\item{\code{"unbiasedKomogorov"}:}{ A research effort misled by the 
  "unbiased" discretization method described in R package \code{actuar}. 
  Such discretization preserves the PDF's mean, but the probabilities 
  will not sum up to 1. Use with caution.}
  
\item{\code{"unbiasedEuclideanCDF"}:}{ A research effort misled by the 
  "unbiased" discretization method described in R package \code{actuar}. 
  Such discretization preserves the PDF's mean, but the probabilities 
  will not sum up to 1. Use with caution.}
}}

\item{max_iterations}{An L-BFGS-B algorithm parameter. Do not change the
default value before consulting \href{https://github.com/yixuan/LBFGSpp}{LBFGSpp}.}

\item{maxCore}{The number of CPU cores for use. Default to 1000. A number
greater than the actual number of logical processors will be capped.
The bidirectional sequential fitting, which is the most likely to be used, 
is single-threaded if the initialization \code{abc} is singular --- when
\eqn{K=1}.}

\item{RIBlib}{A string to specify which library should be used to 
compute the \href{https://en.wikipedia.org/wiki/Beta_function#Incomplete_beta_function}{Regularized Incomplete Beta function}
that TrB CDF depends on. 
\itemize{
\item{\code{"Numerical Recipes"}}{ implements the textbook algorithm in
\href{https://e-maxx.ru/bookz/files/numerical_recipes.pdf}{Chapter 6.4, Numerical Recipes}.
\href{https://live.boost.org/doc/libs/1_54_0/libs/math/doc/html/math_toolkit/sf_beta/ibeta_function.html}{Boost}, 
which claims the textbook algorithm's series expansion converges less 
rapidly than its own approach, actually runs considerably slower because 
it pursues much higher numeric precision.
Such extreme precision turns out largely unncessary in our setting. 
\code{"Numerical Recipes"} is the default and 
the recommended choice.}

\item{\code{"R::pbeta"}}{ calls R's Beta CDF. It is slower than \code{"Numerical Recipes"}
but faster than \code{"Boost"}. In numerically pathological regions, 
\code{"R::pbeta"} is more precise than \code{"Numerical Recipes"} 
but less so than \code{"Boost"}.}

\item{\code{"Boost"}}{ calls \href{https://live.boost.org/doc/libs/1_54_0/libs/math/doc/html/math_toolkit/sf_beta/ibeta_function.html}{boost::math::ibeta}.
It is the slowest but yields much higher precision especially 
in numerically pathological regions.}
}}

\item{sequentialUpdate}{One-based index of the first PMF to be fitted 
during bi-directional sequential fitting. \code{-1} avoids using 
the bi-directional sequential fitting.}

\item{hgrad}{A nonnegative number as the \eqn{\Delta} for finite differencing. 
Default to \code{0} which implies to
use the internal default values: \code{6.055e-6} for central difference, 
\code{1.49e-8} for forward difference. The numbers are 
cubic and square roots of machine precision respectively.}

\item{centralDiff}{\code{TRUE} to use central difference for finite 
differencing. 
\code{FALSE} to use forward difference. Default to \code{TRUE} 
which is also strongly recommended.}

\item{m}{Parameter in L-BFGS-B. Do not change the
default value before consulting \href{https://github.com/yixuan/LBFGSpp}{LBFGSpp}.}

\item{epsilon}{Parameter in L-BFGS-B. Do not change the
default value before consulting \href{https://github.com/yixuan/LBFGSpp}{LBFGSpp}.}

\item{epsilon_rel}{Parameter in L-BFGS-B. Do not change the
default value before consulting \href{https://github.com/yixuan/LBFGSpp}{LBFGSpp}.}

\item{past}{Parameter in L-BFGS-B. Do not change the
default value before consulting \href{https://github.com/yixuan/LBFGSpp}{LBFGSpp}.}

\item{delta}{Parameter in L-BFGS-B. Do not change the
default value before consulting \href{https://github.com/yixuan/LBFGSpp}{LBFGSpp}.}

\item{max_submin}{Parameter in L-BFGS-B. Do not change the
default value before consulting \href{https://github.com/yixuan/LBFGSpp}{LBFGSpp}.}

\item{max_linesearch}{Parameter in L-BFGS-B. Do not change the
default value before consulting \href{https://github.com/yixuan/LBFGSpp}{LBFGSpp}.}

\item{min_step}{Parameter in L-BFGS-B. Do not change the
default value before consulting \href{https://github.com/yixuan/LBFGSpp}{LBFGSpp}.}

\item{max_step}{Parameter in L-BFGS-B. Do not change the
default value before consulting \href{https://github.com/yixuan/LBFGSpp}{LBFGSpp}.}

\item{ftol}{Parameter in L-BFGS-B. Do not change the
default value before consulting \href{https://github.com/yixuan/LBFGSpp}{LBFGSpp}.}

\item{wolfe}{Parameter in L-BFGS-B. Do not change the
default value before consulting \href{https://github.com/yixuan/LBFGSpp}{LBFGSpp}.}
}
\value{
A list of 3 objects:
\itemize{
\item{\code{param}:}{ A numeric matrix of 4 rows. \code{param[, i]} 
contains the optimized \code{a,b,c} and the input \code{lm1} for 
the \code{i}-th empirical PMF.}

\item{\code{fval}:}{ The final objective function values. A value of 
\code{1e300} implies the optimization has not converged and the 
corresponding parameters should be reanalyzed or discarded.}

\item{\code{niter}:}{ The number of iterations until convergence.}
}
}
\description{
Fit TrBs to a list of PMFs using \href{https://en.wikipedia.org/wiki/Limited-memory_BFGS#L-BFGS-B}{L-BFGS-B}.
}
\details{
More details can be found in the slide documentation 
\href{../doc/slides.pdf}{\code{vignette('slides', package = 'NGFMfitDistr')}}.
}
\examples{
library(NGFMfitDistr)
data(tmpCondEmpDistrs, package = "NGFMfitDistr")
data(tmpLm1, package = "NGFMfitDistr")


tmpOptRst = LBFGSBtrbFitList(
  abc = matrix(c(4, 5, 6)), 
  lm1 = tmpLm1,
  empDistrList = tmpCondEmpDistrs,
  abcLB = c(1.01, 0.1, 0.1), abcUB = c(30, 30, 30), 
  scaleEps = 1e-8, scaleMaxit = 100, 
  distanceFun = "likelihood",
  max_iterations = 100, maxCore = 1000, 
  RIBlib = "Numerical Recipes", 
  sequentialUpdate = 5000, 
  hgrad = 0, centralDiff = TRUE, m = 6, epsilon = 1e-5, 
  epsilon_rel = 1e-5, past = 1, delta = 1e-10, max_submin = 10, 
  max_linesearch = 20, min_step = 1e-20, max_step = 1e+20, 
  ftol = 1e-4, wolfe = 0.9)


if (max(abs(tmpOptRst$fval)) > 1e200)
  warning("Not all have converged.")


plot(tmpOptRst$fval, xlab = "MDR index", type = "l", ylab = "Obj value", 
     las = 1, bty = "L")
}
