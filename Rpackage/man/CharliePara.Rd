% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CharlieMPlib.R
\name{CharliePara}
\alias{CharliePara}
\title{Naive distributed computing.}
\usage{
CharliePara(
  X,
  commonData,
  fun,
  maxNprocess = 15L,
  MPtempDir = "../tempFiles/CharlieTempMP/C",
  wait = TRUE,
  RscriptExePath = NULL,
  verbose = 0.01,
  estimatedCosts = NULL
)
}
\arguments{
\item{X}{A list or a vector. \code{X[[i]]} is the data demanded by the \code{i}th task.}

\item{commonData}{An R object of any type.}

\item{fun}{An R function with signature \code{fun(X[[i]], commonData)}.}

\item{maxNprocess}{Maximum number of processes to spawn. Default 15.}

\item{MPtempDir}{Temporary directory for storing saved files.}

\item{wait}{Should the function wait till all processes complete. Default \code{TRUE}.}

\item{RscriptExePath}{Path to \code{Rscript} executable. If \code{NULL}, 
assume \code{Rscript} is runnable in the operating system command prompt.}

\item{verbose}{If 0 < verbose < 1 and if there are \code{N} items to be 
processed, print the progress by each \code{N * verbose} items.}

\item{estimatedCosts}{A numeric vector storing the estimated computational costs
for the jobs. Default to \code{NULL}.}
}
\value{
A list or a vector of character strings. 

\code{wait = FALSE} returns a list. The \code{i}th element is the result
from executing \code{fun} on \code{X[[i]]} and \code{commonData}.

\code{wait = TRUE} returns a vector of character string. The \code{i}th
element is the full file path to the would-be-saved result from executing 
\code{fun} on \code{X[[i]]} and \code{commonData}. Every file is a 
\code{.Rdata} which contains an R object named \code{rst}.
}
\description{
Naive multiprocessing on shared disk architecture.
}
\details{
The function will
\itemize{

\item Partition \code{X} into \code{P <= maxNprocess}
sub-lists and save them separately on disk.

\item Save \code{commonData}, all the loaded library names, and all the
function objects in the current R session on disk.

\item Generate \code{P} R scripts, and invoke \code{P}
\code{Rscript} subprocesses to run those scripts.
}

The function will identify if a function is compiled and linked using 
\code{Rcpp}, and track and load the corresponding \code{.dll} or \code{.so} 
files in subprocesses.
}
